"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cardbrand as shared_cardbrand
from ..shared import cardexpiration as shared_cardexpiration
from ..shared import cardtype as shared_cardtype
from ..shared import paymentmethodtype as shared_paymentmethodtype
from dataclasses_json import Undefined, dataclass_json
from petstore import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class PaymentMethodApplePayApplePay:
    r"""Describes an Apple Pay token on a Moov account."""
    brand: Optional[shared_cardbrand.CardBrand] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brand'), 'exclude': lambda f: f is None }})
    r"""The card brand"""
    card_display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardDisplayName'), 'exclude': lambda f: f is None }})
    r"""User-friendly name of the tokenized card returned by Apple.
    It usually contains the brand and the last four digits of the underlying card for example, \"Visa 1256\". 
    There is no standard format.
    """
    card_type: Optional[shared_cardtype.CardType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardType'), 'exclude': lambda f: f is None }})
    r"""The type of the card"""
    dynamic_last_four: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dynamicLastFour'), 'exclude': lambda f: f is None }})
    r"""The last four digits of the Apple Pay token, which may differ from the tokenized card's last four digits"""
    expiration: Optional[shared_cardexpiration.CardExpiration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiration'), 'exclude': lambda f: f is None }})
    r"""The expiration date of the linked card or token"""
    fingerprint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fingerprint'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies a linked payment card or token.
    For Apple Pay, the fingerprint is based on the tokenized card number and may vary based on the user's device.
    This field can be used to identify specific payment methods across multiple accounts on your platform.
    """
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class PaymentMethodApplePay:
    r"""A method of moving money using an Apple Pay token."""
    apple_pay: Optional[PaymentMethodApplePayApplePay] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applePay'), 'exclude': lambda f: f is None }})
    payment_method_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentMethodID'), 'exclude': lambda f: f is None }})
    r"""UUID v4"""
    payment_method_type: Optional[shared_paymentmethodtype.PaymentMethodType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentMethodType'), 'exclude': lambda f: f is None }})
    r"""The payment method type that represents a payment rail and directionality"""
    

