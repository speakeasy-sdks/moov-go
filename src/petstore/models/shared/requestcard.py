"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import authorizationcontrols as shared_authorizationcontrols
from ..shared import createauthorizeduser as shared_createauthorizeduser
from ..shared import issuedcardtype as shared_issuedcardtype
from dataclasses_json import Undefined, dataclass_json
from petstore import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class RequestCard:
    authorization_controls: Optional[shared_authorizationcontrols.AuthorizationControls] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizationControls'), 'exclude': lambda f: f is None }})
    authorized_user: Optional[shared_createauthorizeduser.CreateAuthorizedUser] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizedUser'), 'exclude': lambda f: f is None }})
    r"""Fields to identify a human"""
    funding_wallet_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fundingWalletID'), 'exclude': lambda f: f is None }})
    memo: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memo'), 'exclude': lambda f: f is None }})
    r"""Optional descriptive name"""
    type: Optional[shared_issuedcardtype.IssuedCardType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of a Moov issued card"""
    

