"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import amount as shared_amount
from ..shared import issuedcardtransactionmerchant as shared_issuedcardtransactionmerchant
from ..shared import issuedcardtransactionstatus as shared_issuedcardtransactionstatus
from ..shared import issuedcardtransactiontype as shared_issuedcardtransactiontype
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from petstore import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class IssuedCardTransaction:
    amount: Optional[shared_amount.Amount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""A representation of money containing an integer value and it's currency."""
    created_on: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdOn'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    funding_wallet_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fundingWalletID'), 'exclude': lambda f: f is None }})
    r"""UUID v4"""
    issuing_card_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issuingCardID'), 'exclude': lambda f: f is None }})
    r"""UUID v4"""
    merchant_data: Optional[shared_issuedcardtransactionmerchant.IssuedCardTransactionMerchant] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantData'), 'exclude': lambda f: f is None }})
    status: Optional[shared_issuedcardtransactionstatus.IssuedCardTransactionStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of Transaction"""
    transaction_date_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionDateTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    transaction_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionID'), 'exclude': lambda f: f is None }})
    r"""UUID v4"""
    type: Optional[shared_issuedcardtransactiontype.IssuedCardTransactionType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of Transaction"""
    

