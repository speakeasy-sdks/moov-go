"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import requirementerror as shared_requirementerror
from ..shared import requirementid as shared_requirementid
from dataclasses_json import Undefined, dataclass_json
from petstore import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class Requirement:
    r"""Represents individual and business data necessary to facilitate the enabling of a capability for an account"""
    currently_due: Optional[list[shared_requirementid.RequirementID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentlyDue'), 'exclude': lambda f: f is None }})
    errors: Optional[list[shared_requirementerror.RequirementError]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    

