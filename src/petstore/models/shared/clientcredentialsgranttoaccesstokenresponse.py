"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from petstore import utils
from typing import Optional

class ClientCredentialsGrantToAccessTokenResponseTokenType(str, Enum):
    r"""Type of token returned. Opaque is not parse-able while JWT follows JWT spec."""
    OPAQUE = 'opaque'
    JWT = 'jwt'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ClientCredentialsGrantToAccessTokenResponse:
    r"""Device model"""
    access_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token'), 'exclude': lambda f: f is None }})
    r"""String passed to the authorization server to gain access to the system"""
    expires_in: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expires_in'), 'exclude': lambda f: f is None }})
    r"""Number of seconds the token is valid for."""
    refresh_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refresh_token'), 'exclude': lambda f: f is None }})
    r"""String passed to the authorization server to gain access to the system"""
    scope: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scope'), 'exclude': lambda f: f is None }})
    r"""A space-delimited list of [scopes](https://docs.moov.io/guides/developer-tools/api-keys/scopes/) that are allowed"""
    token_type: Optional[ClientCredentialsGrantToAccessTokenResponseTokenType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token_type'), 'exclude': lambda f: f is None }})
    r"""Type of token returned. Opaque is not parse-able while JWT follows JWT spec."""
    

