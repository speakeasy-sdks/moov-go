"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import amount as shared_amount
from ..shared import createachdetailsbase as shared_createachdetailsbase
from ..shared import createachdetailssource as shared_createachdetailssource
from ..shared import createcarddetails as shared_createcarddetails
from ..shared import createfacilitatorfee as shared_createfacilitatorfee
from dataclasses_json import Undefined, dataclass_json
from petstore import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateTransferDestination:
    r"""A payment method ID"""
    ach_details: Optional[shared_createachdetailsbase.CreateACHDetailsBase] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('achDetails'), 'exclude': lambda f: f is None }})
    payment_method_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentMethodID'), 'exclude': lambda f: f is None }})
    r"""UUID v4"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateTransferSource:
    r"""A payment method ID"""
    ach_details: Optional[shared_createachdetailssource.CreateAchDetailsSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('achDetails'), 'exclude': lambda f: f is None }})
    card_details: Optional[shared_createcarddetails.CreateCardDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardDetails'), 'exclude': lambda f: f is None }})
    payment_method_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentMethodID'), 'exclude': lambda f: f is None }})
    r"""UUID v4"""
    transfer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferID'), 'exclude': lambda f: f is None }})
    r"""UUID v4"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateTransfer:
    amount: Optional[shared_amount.Amount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""A representation of money containing an integer value and it's currency."""
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A description of the transfer"""
    destination: Optional[CreateTransferDestination] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destination'), 'exclude': lambda f: f is None }})
    r"""A payment method ID"""
    facilitator_fee: Optional[shared_createfacilitatorfee.CreateFacilitatorFee] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('facilitatorFee'), 'exclude': lambda f: f is None }})
    r"""Total or markup fee"""
    metadata: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Free-form key-value pair list. Useful for storing information that is not captured elsewhere."""
    source: Optional[CreateTransferSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""A payment method ID"""
    

