"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class RevokeTokenRequestTokenTypeHint(str, Enum):
    r"""A hint about the type of the token submitted for revocation"""
    ACCESS_TOKEN = 'access_token'
    REFRESH_TOKEN = 'refresh_token'



@dataclasses.dataclass
class RevokeTokenRequest1:
    r"""Allows clients to notify the authorization server that a previously obtained refresh or access token is no longer needed"""
    token: str = dataclasses.field(metadata={'form': { 'field_name': 'token' }})
    r"""String passed to the authorization server to gain access to the system"""
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'client_id' }})
    r"""If not specified in `Authorization: Basic` it can be specified here"""
    client_secret: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'client_secret' }})
    r"""If not specified in `Authorization: Basic` it can be specified here"""
    token_type_hint: Optional[RevokeTokenRequestTokenTypeHint] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'token_type_hint' }})
    r"""A hint about the type of the token submitted for revocation"""
    

