"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accounttype as shared_accounttype
from ..shared import capabilityid as shared_capabilityid
from ..shared import createprofile as shared_createprofile
from ..shared import mode as shared_mode
from dataclasses_json import Undefined, dataclass_json
from petstore import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateAccountRequestCustomerSupportAddress:
    address_line1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressLine1'), 'exclude': lambda f: f is None }})
    address_line2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressLine2'), 'exclude': lambda f: f is None }})
    city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city'), 'exclude': lambda f: f is None }})
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    postal_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postalCode'), 'exclude': lambda f: f is None }})
    state_or_province: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stateOrProvince'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateAccountRequestCustomerSupportPhone:
    country_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('countryCode'), 'exclude': lambda f: f is None }})
    number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateAccountRequestCustomerSupport:
    r"""User-provided information that can be displayed on credit card transactions for customers to use when contacting a customer support team. This data is only allowed on a business account"""
    address: Optional[CreateAccountRequestCustomerSupportAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Email Address"""
    phone: Optional[CreateAccountRequestCustomerSupportPhone] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone'), 'exclude': lambda f: f is None }})
    website: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('website'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateAccountRequestSettingsAchPayment:
    r"""User provided settings to manage ACH payments"""
    company_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('companyName'), 'exclude': lambda f: f is None }})
    r"""The description that shows up on ACH transactions. This will default to the account's display name on account creation."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateAccountRequestSettingsCardPayment:
    r"""User provided settings to manage card payments. This data is only allowed on a business account"""
    statement_descriptor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statementDescriptor'), 'exclude': lambda f: f is None }})
    r"""The description that shows up on credit card transactions. This will default to the accounts display name on account creation."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateAccountRequestSettings:
    r"""User provided settings to manage an account"""
    ach_payment: Optional[CreateAccountRequestSettingsAchPayment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('achPayment'), 'exclude': lambda f: f is None }})
    card_payment: Optional[CreateAccountRequestSettingsCardPayment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardPayment'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateAccountRequestTermsOfService:
    r"""An encrypted value used to record acceptance of Moov's Terms of Service"""
    token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateAccountRequest:
    r"""Describes the fields available when creating a Moov Account"""
    account_type: shared_accounttype.AccountType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountType') }})
    r"""The type of entity represented by this Account"""
    profile: shared_createprofile.CreateProfile = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profile') }})
    r"""Describes the fields available when creating a profile.
    If `accountType` is set to `individual`, the `individual` object should be completed. All others should populate `business`.
    """
    capabilities: Optional[list[shared_capabilityid.CapabilityID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capabilities'), 'exclude': lambda f: f is None }})
    r"""The list of capabilities to request when the account is created."""
    customer_support: Optional[CreateAccountRequestCustomerSupport] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customerSupport'), 'exclude': lambda f: f is None }})
    foreign_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('foreignID'), 'exclude': lambda f: f is None }})
    r"""Serves as an optional alias from a foreign/external system which can be used to reference this resource"""
    metadata: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Free-form key-value pair list. Useful for storing information that is not captured elsewhere."""
    mode: Optional[shared_mode.Mode] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mode'), 'exclude': lambda f: f is None }})
    r"""The mode this account is allowed to be used within."""
    settings: Optional[CreateAccountRequestSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('settings'), 'exclude': lambda f: f is None }})
    terms_of_service: Optional[CreateAccountRequestTermsOfService] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('termsOfService'), 'exclude': lambda f: f is None }})
    

