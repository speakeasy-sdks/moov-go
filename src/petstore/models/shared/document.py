"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from petstore import utils
from typing import Optional

class DocumentType(str, Enum):
    DRIVERS_LICENSE = 'DriversLicense'
    PASSPORT = 'Passport'
    UTILITY_BILL = 'UtilityBill'
    BANK_STATEMENT = 'BankStatement'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class Document:
    r"""Describes an uploaded file"""
    content_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentType') }})
    document_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentID') }})
    r"""A unique identifier for this document"""
    type: DocumentType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    uploaded_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uploadedAt'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    parse_errors: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parseErrors'), 'exclude': lambda f: f is None }})
    r"""Optional array of errors encountered dring automated parsing."""
    

