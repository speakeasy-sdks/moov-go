"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import issuedcard as shared_issuedcard
from ..shared import issuedcardstate as shared_issuedcardstate
from typing import Optional



@dataclasses.dataclass
class GetListIssuedCardsRequest:
    account_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'accountID', 'style': 'simple', 'explode': False }})
    r"""ID of the account"""
    count: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'count', 'style': 'form', 'explode': True }})
    r"""Optional parameter to limit the number of results in the query"""
    skip: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'skip', 'style': 'form', 'explode': True }})
    r"""The number of items to offset before starting to collect the result set"""
    states: Optional[shared_issuedcardstate.IssuedCardState] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'states', 'style': 'form', 'explode': True }})
    r"""Optional, comma-separated states to filter the Moov list issued cards response."""
    




@dataclasses.dataclass
class GetListIssuedCardsResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    issued_cards: Optional[list[shared_issuedcard.IssuedCard]] = dataclasses.field(default=None)
    r"""Successfully retrieved cards"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

