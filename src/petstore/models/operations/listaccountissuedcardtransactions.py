"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import issuedcardtransaction as shared_issuedcardtransaction
from ..shared import issuedcardtransactionstatus as shared_issuedcardtransactionstatus
from typing import Optional



@dataclasses.dataclass
class ListAccountIssuedCardTransactionsRequest:
    account_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'accountID', 'style': 'simple', 'explode': False }})
    r"""ID of the account"""
    count: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'count', 'style': 'form', 'explode': True }})
    r"""Optional parameter to limit the number of results in the query"""
    skip: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'skip', 'style': 'form', 'explode': True }})
    r"""The number of items to offset before starting to collect the result set"""
    status: Optional[shared_issuedcardtransactionstatus.IssuedCardTransactionStatus] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Optional parameters to filter results IssuedCardTransactions."""
    




@dataclasses.dataclass
class ListAccountIssuedCardTransactionsResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    issued_card_transactions: Optional[list[shared_issuedcardtransaction.IssuedCardTransaction]] = dataclasses.field(default=None)
    r"""Successfully retrieved issued card transactions"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

