"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import addcapabilityrequest as shared_addcapabilityrequest
from ..shared import capability as shared_capability
from ..shared import capabilityrequesterror as shared_capabilityrequesterror
from typing import Optional



@dataclasses.dataclass
class PostCapabilityRequest:
    account_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'accountID', 'style': 'simple', 'explode': False }})
    r"""ID of the account"""
    add_capability_request: shared_addcapabilityrequest.AddCapabilityRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    




@dataclasses.dataclass
class PostCapabilityResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    capabilities: Optional[list[shared_capability.Capability]] = dataclasses.field(default=None)
    r"""The list of capabilities for the account"""
    capability_request_error: Optional[shared_capabilityrequesterror.CapabilityRequestError] = dataclasses.field(default=None)
    r"""The request could not be processed due to a state conflict with the target resource"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

