"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createdtransfer as shared_createdtransfer
from ..shared import createtransfer as shared_createtransfer
from ..shared import gettransferfull as shared_gettransferfull
from ..shared import waitfor as shared_waitfor
from typing import Any, Optional



@dataclasses.dataclass
class CreateTransferRequest:
    create_transfer: shared_createtransfer.CreateTransfer = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    x_idempotency_key: str = dataclasses.field(metadata={'header': { 'field_name': 'X-Idempotency-Key', 'style': 'simple', 'explode': False }})
    r"""Prevents duplicate transfers from being created. Note that we only accept UUID v4."""
    x_wait_for: Optional[shared_waitfor.WaitFor] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Wait-For', 'style': 'simple', 'explode': False }})
    r"""Optional header that indicates whether to return a synchronous response that includes full transfer and rail-specific details or an asynchronous response indicating the transfer was created (this is the default response if the header is omitted)."""
    




@dataclasses.dataclass
class CreateTransferResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    created_transfer: Optional[shared_createdtransfer.CreatedTransfer] = dataclasses.field(default=None)
    r"""A transfer was successfully created but an error occurred while generating the synchronous response. The asynchronous response object will be returned."""
    get_transfer_full: Optional[shared_gettransferfull.GetTransferFull] = dataclasses.field(default=None)
    r"""A transfer was successfully created but a timeout occurred while waiting for a synchronous response. Rail-specific details may be missing from the response object."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    transfer_post_response: Optional[Any] = dataclasses.field(default=None)
    r"""Successfully created a transfer"""
    

