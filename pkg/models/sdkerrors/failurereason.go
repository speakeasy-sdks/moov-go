// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"fmt"
)

// FailureReason - Transfer failure reason
type FailureReason string

const (
	FailureReasonSourcePaymentError      FailureReason = "source-payment-error"
	FailureReasonDestinationPaymentError FailureReason = "destination-payment-error"
	FailureReasonWalletInsufficientFunds FailureReason = "wallet-insufficient-funds"
	FailureReasonRejectedHighRisk        FailureReason = "rejected-high-risk"
	FailureReasonProcessingError         FailureReason = "processing-error"
)

func (e FailureReason) ToPointer() *FailureReason {
	return &e
}

func (e *FailureReason) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "source-payment-error":
		fallthrough
	case "destination-payment-error":
		fallthrough
	case "wallet-insufficient-funds":
		fallthrough
	case "rejected-high-risk":
		fallthrough
	case "processing-error":
		*e = FailureReason(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FailureReason: %v", v)
	}
}
