// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RequirementID - The unique ID of what the requirement is asking to be filled out.
type RequirementID string

const (
	RequirementIDAccountTosAcceptance                    RequirementID = "account.tos-acceptance"
	RequirementIDIndividualMobile                        RequirementID = "individual.mobile"
	RequirementIDIndividualEmail                         RequirementID = "individual.email"
	RequirementIDIndividualEmailOrMobile                 RequirementID = "individual.email-or-mobile"
	RequirementIDIndividualFirstname                     RequirementID = "individual.firstname"
	RequirementIDIndividualLastname                      RequirementID = "individual.lastname"
	RequirementIDIndividualAddress                       RequirementID = "individual.address"
	RequirementIDIndividualSsnLast4                      RequirementID = "individual.ssn-last4"
	RequirementIDIndividualSsn                           RequirementID = "individual.ssn"
	RequirementIDIndividualBirthdate                     RequirementID = "individual.birthdate"
	RequirementIDBusinessLegalname                       RequirementID = "business.legalname"
	RequirementIDBusinessDescriptionOrWebsite            RequirementID = "business.description-or-website"
	RequirementIDBusinessEntityType                      RequirementID = "business.entity-type"
	RequirementIDBusinessDba                             RequirementID = "business.dba"
	RequirementIDBusinessEin                             RequirementID = "business.ein"
	RequirementIDBusinessAddress                         RequirementID = "business.address"
	RequirementIDBusinessPhone                           RequirementID = "business.phone"
	RequirementIDBusinessAdmins                          RequirementID = "business.admins"
	RequirementIDBusinessControllers                     RequirementID = "business.controllers"
	RequirementIDBusinessOwners                          RequirementID = "business.owners"
	RequirementIDBusinessClassification                  RequirementID = "business.classification"
	RequirementIDBusinessIndustryCodeMcc                 RequirementID = "business.industry-code-mcc"
	RequirementIDBusinessIndicateOwnersProvided          RequirementID = "business.indicate-owners-provided"
	RequirementIDBusinessAverageTransactionSize          RequirementID = "business.average-transaction-size"
	RequirementIDBusinessMaxTransactionSize              RequirementID = "business.max-transaction-size"
	RequirementIDBusinessAverageMonthlyTransactionVolume RequirementID = "business.average-monthly-transaction-volume"
	RequirementIDBusinessDescription                     RequirementID = "business.description"
	RequirementIDBusinessUnderwritingDocumentsTierOne    RequirementID = "business.underwriting-documents-tier-one"
	RequirementIDBankAccountsName                        RequirementID = "bank-accounts.name"
	RequirementIDBankAccountsRoutingNumber               RequirementID = "bank-accounts.routing-number"
	RequirementIDBankAccountsAccountNumber               RequirementID = "bank-accounts.account-number"
	RequirementIDRepresentativeRepUUIDMobile             RequirementID = "representative.{rep-uuid}.mobile"
	RequirementIDRepresentativeRepUUIDEmail              RequirementID = "representative.{rep-uuid}.email"
	RequirementIDRepresentativeRepUUIDEmailOrMobile      RequirementID = "representative.{rep-uuid}.email-or-mobile"
	RequirementIDRepresentativeRepUUIDFirstname          RequirementID = "representative.{rep-uuid}.firstname"
	RequirementIDRepresentativeRepUUIDLastname           RequirementID = "representative.{rep-uuid}.lastname"
	RequirementIDRepresentativeRepUUIDAddress            RequirementID = "representative.{rep-uuid}.address"
	RequirementIDRepresentativeRepUUIDSsnLast4           RequirementID = "representative.{rep-uuid}.ssn-last4"
	RequirementIDRepresentativeRepUUIDSsn                RequirementID = "representative.{rep-uuid}.ssn"
	RequirementIDRepresentativeRepUUIDBirthdate          RequirementID = "representative.{rep-uuid}.birthdate"
	RequirementIDRepresentativeRepUUIDJobTitle           RequirementID = "representative.{rep-uuid}.job-title"
	RequirementIDRepresentativeRepUUIDIsController       RequirementID = "representative.{rep-uuid}.is-controller"
	RequirementIDRepresentativeRepUUIDIsOwner            RequirementID = "representative.{rep-uuid}.is-owner"
	RequirementIDRepresentativeRepUUIDOwnership          RequirementID = "representative.{rep-uuid}.ownership"
	RequirementIDDocumentDocUUID                         RequirementID = "document.{doc-uuid}"
)

func (e RequirementID) ToPointer() *RequirementID {
	return &e
}

func (e *RequirementID) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account.tos-acceptance":
		fallthrough
	case "individual.mobile":
		fallthrough
	case "individual.email":
		fallthrough
	case "individual.email-or-mobile":
		fallthrough
	case "individual.firstname":
		fallthrough
	case "individual.lastname":
		fallthrough
	case "individual.address":
		fallthrough
	case "individual.ssn-last4":
		fallthrough
	case "individual.ssn":
		fallthrough
	case "individual.birthdate":
		fallthrough
	case "business.legalname":
		fallthrough
	case "business.description-or-website":
		fallthrough
	case "business.entity-type":
		fallthrough
	case "business.dba":
		fallthrough
	case "business.ein":
		fallthrough
	case "business.address":
		fallthrough
	case "business.phone":
		fallthrough
	case "business.admins":
		fallthrough
	case "business.controllers":
		fallthrough
	case "business.owners":
		fallthrough
	case "business.classification":
		fallthrough
	case "business.industry-code-mcc":
		fallthrough
	case "business.indicate-owners-provided":
		fallthrough
	case "business.average-transaction-size":
		fallthrough
	case "business.max-transaction-size":
		fallthrough
	case "business.average-monthly-transaction-volume":
		fallthrough
	case "business.description":
		fallthrough
	case "business.underwriting-documents-tier-one":
		fallthrough
	case "bank-accounts.name":
		fallthrough
	case "bank-accounts.routing-number":
		fallthrough
	case "bank-accounts.account-number":
		fallthrough
	case "representative.{rep-uuid}.mobile":
		fallthrough
	case "representative.{rep-uuid}.email":
		fallthrough
	case "representative.{rep-uuid}.email-or-mobile":
		fallthrough
	case "representative.{rep-uuid}.firstname":
		fallthrough
	case "representative.{rep-uuid}.lastname":
		fallthrough
	case "representative.{rep-uuid}.address":
		fallthrough
	case "representative.{rep-uuid}.ssn-last4":
		fallthrough
	case "representative.{rep-uuid}.ssn":
		fallthrough
	case "representative.{rep-uuid}.birthdate":
		fallthrough
	case "representative.{rep-uuid}.job-title":
		fallthrough
	case "representative.{rep-uuid}.is-controller":
		fallthrough
	case "representative.{rep-uuid}.is-owner":
		fallthrough
	case "representative.{rep-uuid}.ownership":
		fallthrough
	case "document.{doc-uuid}":
		*e = RequirementID(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RequirementID: %v", v)
	}
}
