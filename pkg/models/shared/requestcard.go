// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/moov-go/pkg/types"
	"github.com/speakeasy-sdks/moov-go/pkg/utils"
)

type RequestCard struct {
	AuthorizationControls *AuthorizationControls `json:"authorizationControls,omitempty"`
	// Fields to identify a human
	AuthorizedUser  *CreateAuthorizedUser `json:"authorizedUser,omitempty"`
	FundingWalletID *string               `json:"fundingWalletID,omitempty"`
	// Optional descriptive name
	Memo *string `json:"memo,omitempty"`
	// Type of a Moov issued card
	type_ *string `const:"single-use" json:"type,omitempty"`
}

func (r RequestCard) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RequestCard) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RequestCard) GetAuthorizationControls() *AuthorizationControls {
	if o == nil {
		return nil
	}
	return o.AuthorizationControls
}

func (o *RequestCard) GetAuthorizedUser() *CreateAuthorizedUser {
	if o == nil {
		return nil
	}
	return o.AuthorizedUser
}

func (o *RequestCard) GetFundingWalletID() *string {
	if o == nil {
		return nil
	}
	return o.FundingWalletID
}

func (o *RequestCard) GetMemo() *string {
	if o == nil {
		return nil
	}
	return o.Memo
}

func (o *RequestCard) GetType() *string {
	return types.String("single-use")
}
