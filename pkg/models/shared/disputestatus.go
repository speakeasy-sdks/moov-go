// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DisputeStatus - Dispute status
type DisputeStatus string

const (
	DisputeStatusResponseNeeded DisputeStatus = "response-needed"
	DisputeStatusResolved       DisputeStatus = "resolved"
)

func (e DisputeStatus) ToPointer() *DisputeStatus {
	return &e
}

func (e *DisputeStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "response-needed":
		fallthrough
	case "resolved":
		*e = DisputeStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisputeStatus: %v", v)
	}
}
