// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// GetTransferFullDisputedAmount - A representation of money containing an integer value and it's currency.
type GetTransferFullDisputedAmount struct {
	// A 3-letter ISO 4217 currency code
	Currency string `json:"currency"`
	// Quantity in the smallest unit of the specified currency. In USD this is cents, so $12.04 is 1204 and $0.99 would be 99.
	Value int64 `json:"value"`
}

func (o *GetTransferFullDisputedAmount) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *GetTransferFullDisputedAmount) GetValue() int64 {
	if o == nil {
		return 0
	}
	return o.Value
}

// GetTransferFullRefundedAmount - A representation of money containing an integer value and it's currency.
type GetTransferFullRefundedAmount struct {
	// A 3-letter ISO 4217 currency code
	Currency string `json:"currency"`
	// Quantity in the smallest unit of the specified currency. In USD this is cents, so $12.04 is 1204 and $0.99 would be 99.
	Value int64 `json:"value"`
}

func (o *GetTransferFullRefundedAmount) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *GetTransferFullRefundedAmount) GetValue() int64 {
	if o == nil {
		return 0
	}
	return o.Value
}

// GetTransferFull - Transfer details
type GetTransferFull struct {
	// A representation of money containing an integer value and it's currency.
	Amount    *Amount    `json:"amount,omitempty"`
	CreatedOn *time.Time `json:"createdOn,omitempty"`
	// A description of the transfer
	Description *string                           `json:"description,omitempty"`
	Destination *GetTransferFullSourceDestination `json:"destination,omitempty"`
	// The total disputed amount for a card transfer
	DisputedAmount *GetTransferFullDisputedAmount `json:"disputedAmount,omitempty"`
	// A list of disputes for a card transfer
	Disputes []GetDispute `json:"disputes,omitempty"`
	// Fee you charged your customer for the transfer
	FacilitatorFee *GetFacilitatorFee `json:"facilitatorFee,omitempty"`
	// Transfer failure reason
	FailureReason *FailureReason `json:"failureReason,omitempty"`
	GroupID       *string        `json:"groupID,omitempty"`
	// Free-form key-value pair list. Useful for storing information that is not captured elsewhere.
	Metadata map[string]string `json:"metadata,omitempty"`
	// Fee charged to your platform account for card transfers
	MoovFee *int64 `json:"moovFee,omitempty"`
	// The total refunded amount for a card transfer
	RefundedAmount *GetTransferFullRefundedAmount `json:"refundedAmount,omitempty"`
	// A list of refunds for a card transfer
	Refunds []GetRefund            `json:"refunds,omitempty"`
	Source  *GetTransferFullSource `json:"source,omitempty"`
	// Current status of a transfer
	Status *TransferStatus `json:"status,omitempty"`
	// UUID v4
	TransferID *string `json:"transferID,omitempty"`
}

func (o *GetTransferFull) GetAmount() *Amount {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *GetTransferFull) GetCreatedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedOn
}

func (o *GetTransferFull) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetTransferFull) GetDestination() *GetTransferFullSourceDestination {
	if o == nil {
		return nil
	}
	return o.Destination
}

func (o *GetTransferFull) GetDisputedAmount() *GetTransferFullDisputedAmount {
	if o == nil {
		return nil
	}
	return o.DisputedAmount
}

func (o *GetTransferFull) GetDisputes() []GetDispute {
	if o == nil {
		return nil
	}
	return o.Disputes
}

func (o *GetTransferFull) GetFacilitatorFee() *GetFacilitatorFee {
	if o == nil {
		return nil
	}
	return o.FacilitatorFee
}

func (o *GetTransferFull) GetFailureReason() *FailureReason {
	if o == nil {
		return nil
	}
	return o.FailureReason
}

func (o *GetTransferFull) GetGroupID() *string {
	if o == nil {
		return nil
	}
	return o.GroupID
}

func (o *GetTransferFull) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *GetTransferFull) GetMoovFee() *int64 {
	if o == nil {
		return nil
	}
	return o.MoovFee
}

func (o *GetTransferFull) GetRefundedAmount() *GetTransferFullRefundedAmount {
	if o == nil {
		return nil
	}
	return o.RefundedAmount
}

func (o *GetTransferFull) GetRefunds() []GetRefund {
	if o == nil {
		return nil
	}
	return o.Refunds
}

func (o *GetTransferFull) GetSource() *GetTransferFullSource {
	if o == nil {
		return nil
	}
	return o.Source
}

func (o *GetTransferFull) GetStatus() *TransferStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetTransferFull) GetTransferID() *string {
	if o == nil {
		return nil
	}
	return o.TransferID
}
