// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// File - Describes a file linked to a Moov account
type File struct {
	// UUID v4
	AccountID *string    `json:"accountID,omitempty"`
	CreatedOn *time.Time `json:"createdOn,omitempty"`
	// UUID v4
	FileID   *string `json:"fileID,omitempty"`
	FileName *string `json:"fileName,omitempty"`
	// The file purpose
	FilePurpose   *FilePurpose `json:"filePurpose,omitempty"`
	FileSizeBytes *int64       `json:"fileSizeBytes,omitempty"`
	// The file status
	FileStatus *FileStatus `json:"fileStatus,omitempty"`
	UpdatedOn  *time.Time  `json:"updatedOn,omitempty"`
}

func (o *File) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *File) GetCreatedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedOn
}

func (o *File) GetFileID() *string {
	if o == nil {
		return nil
	}
	return o.FileID
}

func (o *File) GetFileName() *string {
	if o == nil {
		return nil
	}
	return o.FileName
}

func (o *File) GetFilePurpose() *FilePurpose {
	if o == nil {
		return nil
	}
	return o.FilePurpose
}

func (o *File) GetFileSizeBytes() *int64 {
	if o == nil {
		return nil
	}
	return o.FileSizeBytes
}

func (o *File) GetFileStatus() *FileStatus {
	if o == nil {
		return nil
	}
	return o.FileStatus
}

func (o *File) GetUpdatedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedOn
}
