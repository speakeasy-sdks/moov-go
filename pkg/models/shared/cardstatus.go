// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CardStatus - Card status
type CardStatus string

const (
	CardStatusInitiated CardStatus = "initiated"
	CardStatusConfirmed CardStatus = "confirmed"
	CardStatusCanceled  CardStatus = "canceled"
	CardStatusSettled   CardStatus = "settled"
	CardStatusFailed    CardStatus = "failed"
	CardStatusCompleted CardStatus = "completed"
)

func (e CardStatus) ToPointer() *CardStatus {
	return &e
}

func (e *CardStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initiated":
		fallthrough
	case "confirmed":
		fallthrough
	case "canceled":
		fallthrough
	case "settled":
		fallthrough
	case "failed":
		fallthrough
	case "completed":
		*e = CardStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CardStatus: %v", v)
	}
}
