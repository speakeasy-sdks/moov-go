// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/moov-go/pkg/types"
	"github.com/speakeasy-sdks/moov-go/pkg/utils"
	"time"
)

// FullIssuedCard - Issued card with PAN, CVV, and expiration
type FullIssuedCard struct {
	AuthorizationControls *AuthorizationControls `json:"authorizationControls,omitempty"`
	// Fields to identify a human
	AuthorizedUser *AuthorizedUser `json:"authorizedUser,omitempty"`
	// The card brand
	Brand     *CardBrand `json:"brand,omitempty"`
	CreatedOn *time.Time `json:"createdOn,omitempty"`
	Cvv       *string    `json:"cvv,omitempty"`
	// The expiration date of the linked card or token
	Expiration      *CardExpiration `json:"expiration,omitempty"`
	FundingWalletID *string         `json:"fundingWalletID,omitempty"`
	// UUID v4
	IssuedCardID       *string `json:"issuedCardID,omitempty"`
	LastFourCardNumber *string `json:"lastFourCardNumber,omitempty"`
	// Optional descriptive name
	Memo *string `json:"memo,omitempty"`
	Pan  *string `json:"pan,omitempty"`
	// State of a Moov issued card
	State *IssuedCardState `json:"state,omitempty"`
	// Type of a Moov issued card
	type_ *string `const:"single-use" json:"type,omitempty"`
}

func (f FullIssuedCard) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FullIssuedCard) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *FullIssuedCard) GetAuthorizationControls() *AuthorizationControls {
	if o == nil {
		return nil
	}
	return o.AuthorizationControls
}

func (o *FullIssuedCard) GetAuthorizedUser() *AuthorizedUser {
	if o == nil {
		return nil
	}
	return o.AuthorizedUser
}

func (o *FullIssuedCard) GetBrand() *CardBrand {
	if o == nil {
		return nil
	}
	return o.Brand
}

func (o *FullIssuedCard) GetCreatedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedOn
}

func (o *FullIssuedCard) GetCvv() *string {
	if o == nil {
		return nil
	}
	return o.Cvv
}

func (o *FullIssuedCard) GetExpiration() *CardExpiration {
	if o == nil {
		return nil
	}
	return o.Expiration
}

func (o *FullIssuedCard) GetFundingWalletID() *string {
	if o == nil {
		return nil
	}
	return o.FundingWalletID
}

func (o *FullIssuedCard) GetIssuedCardID() *string {
	if o == nil {
		return nil
	}
	return o.IssuedCardID
}

func (o *FullIssuedCard) GetLastFourCardNumber() *string {
	if o == nil {
		return nil
	}
	return o.LastFourCardNumber
}

func (o *FullIssuedCard) GetMemo() *string {
	if o == nil {
		return nil
	}
	return o.Memo
}

func (o *FullIssuedCard) GetPan() *string {
	if o == nil {
		return nil
	}
	return o.Pan
}

func (o *FullIssuedCard) GetState() *IssuedCardState {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *FullIssuedCard) GetType() *string {
	return types.String("single-use")
}
