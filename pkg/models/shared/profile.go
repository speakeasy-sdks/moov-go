// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/moov-go/pkg/utils"
)

type ProfileAddress struct {
	AddressLine1    *string `json:"addressLine1,omitempty"`
	AddressLine2    *string `json:"addressLine2,omitempty"`
	City            *string `json:"city,omitempty"`
	Country         *string `json:"country,omitempty"`
	PostalCode      *string `json:"postalCode,omitempty"`
	StateOrProvince *string `json:"stateOrProvince,omitempty"`
}

func (o *ProfileAddress) GetAddressLine1() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine1
}

func (o *ProfileAddress) GetAddressLine2() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine2
}

func (o *ProfileAddress) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *ProfileAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *ProfileAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *ProfileAddress) GetStateOrProvince() *string {
	if o == nil {
		return nil
	}
	return o.StateOrProvince
}

// ProfileIndustryCodes - Describes industry specific identifiers
type ProfileIndustryCodes struct {
	Mcc   *string `json:"mcc,omitempty"`
	Naics *string `json:"naics,omitempty"`
	Sic   *string `json:"sic,omitempty"`
}

func (o *ProfileIndustryCodes) GetMcc() *string {
	if o == nil {
		return nil
	}
	return o.Mcc
}

func (o *ProfileIndustryCodes) GetNaics() *string {
	if o == nil {
		return nil
	}
	return o.Naics
}

func (o *ProfileIndustryCodes) GetSic() *string {
	if o == nil {
		return nil
	}
	return o.Sic
}

type ProfilePhone struct {
	CountryCode *string `json:"countryCode,omitempty"`
	Number      *string `json:"number,omitempty"`
}

func (o *ProfilePhone) GetCountryCode() *string {
	if o == nil {
		return nil
	}
	return o.CountryCode
}

func (o *ProfilePhone) GetNumber() *string {
	if o == nil {
		return nil
	}
	return o.Number
}

// ProfileBusiness - Describes a business
type ProfileBusiness struct {
	Address *ProfileAddress `json:"address,omitempty"`
	// The type of entity represented by this Business
	BusinessType    BusinessType `json:"businessType"`
	Description     *string      `json:"description,omitempty"`
	DoingBusinessAs *string      `json:"doingBusinessAs,omitempty"`
	// Email Address
	Email             *string               `json:"email,omitempty"`
	IndustryCodes     *ProfileIndustryCodes `json:"industryCodes,omitempty"`
	LegalBusinessName string                `json:"legalBusinessName"`
	OwnersProvided    bool                  `json:"ownersProvided"`
	Phone             *ProfilePhone         `json:"phone,omitempty"`
	Representatives   []Representative      `json:"representatives,omitempty"`
	// Indicates whether a tax ID has been provided for this Business
	TaxIDProvided *bool   `default:"false" json:"taxIDProvided"`
	Website       *string `json:"website,omitempty"`
}

func (p ProfileBusiness) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProfileBusiness) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ProfileBusiness) GetAddress() *ProfileAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *ProfileBusiness) GetBusinessType() BusinessType {
	if o == nil {
		return BusinessType("")
	}
	return o.BusinessType
}

func (o *ProfileBusiness) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ProfileBusiness) GetDoingBusinessAs() *string {
	if o == nil {
		return nil
	}
	return o.DoingBusinessAs
}

func (o *ProfileBusiness) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *ProfileBusiness) GetIndustryCodes() *ProfileIndustryCodes {
	if o == nil {
		return nil
	}
	return o.IndustryCodes
}

func (o *ProfileBusiness) GetLegalBusinessName() string {
	if o == nil {
		return ""
	}
	return o.LegalBusinessName
}

func (o *ProfileBusiness) GetOwnersProvided() bool {
	if o == nil {
		return false
	}
	return o.OwnersProvided
}

func (o *ProfileBusiness) GetPhone() *ProfilePhone {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *ProfileBusiness) GetRepresentatives() []Representative {
	if o == nil {
		return nil
	}
	return o.Representatives
}

func (o *ProfileBusiness) GetTaxIDProvided() *bool {
	if o == nil {
		return nil
	}
	return o.TaxIDProvided
}

func (o *ProfileBusiness) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

type ProfileSchemasAddress struct {
	AddressLine1    *string `json:"addressLine1,omitempty"`
	AddressLine2    *string `json:"addressLine2,omitempty"`
	City            *string `json:"city,omitempty"`
	Country         *string `json:"country,omitempty"`
	PostalCode      *string `json:"postalCode,omitempty"`
	StateOrProvince *string `json:"stateOrProvince,omitempty"`
}

func (o *ProfileSchemasAddress) GetAddressLine1() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine1
}

func (o *ProfileSchemasAddress) GetAddressLine2() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine2
}

func (o *ProfileSchemasAddress) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *ProfileSchemasAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *ProfileSchemasAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *ProfileSchemasAddress) GetStateOrProvince() *string {
	if o == nil {
		return nil
	}
	return o.StateOrProvince
}

type ProfileSchemasPhone struct {
	CountryCode *string `json:"countryCode,omitempty"`
	Number      *string `json:"number,omitempty"`
}

func (o *ProfileSchemasPhone) GetCountryCode() *string {
	if o == nil {
		return nil
	}
	return o.CountryCode
}

func (o *ProfileSchemasPhone) GetNumber() *string {
	if o == nil {
		return nil
	}
	return o.Number
}

// ProfileIndividual - Describes an individual
type ProfileIndividual struct {
	Address *ProfileSchemasAddress `json:"address,omitempty"`
	// Indicates whether this Individual's birth date has been provided
	BirthDateProvided *bool `default:"false" json:"birthDateProvided"`
	// Email Address
	Email *string `json:"email,omitempty"`
	// Indicates whether a government ID (SSN, ITIN, etc.) has been provided for this Individual
	GovernmentIDProvided *bool `default:"false" json:"governmentIDProvided"`
	// Name for an individual
	Name  Name                 `json:"name"`
	Phone *ProfileSchemasPhone `json:"phone,omitempty"`
}

func (p ProfileIndividual) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProfileIndividual) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ProfileIndividual) GetAddress() *ProfileSchemasAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *ProfileIndividual) GetBirthDateProvided() *bool {
	if o == nil {
		return nil
	}
	return o.BirthDateProvided
}

func (o *ProfileIndividual) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *ProfileIndividual) GetGovernmentIDProvided() *bool {
	if o == nil {
		return nil
	}
	return o.GovernmentIDProvided
}

func (o *ProfileIndividual) GetName() Name {
	if o == nil {
		return Name{}
	}
	return o.Name
}

func (o *ProfileIndividual) GetPhone() *ProfileSchemasPhone {
	if o == nil {
		return nil
	}
	return o.Phone
}

// Profile - Describes a Moov Account Profile
type Profile struct {
	Business   *ProfileBusiness   `json:"business,omitempty"`
	Individual *ProfileIndividual `json:"individual,omitempty"`
}

func (o *Profile) GetBusiness() *ProfileBusiness {
	if o == nil {
		return nil
	}
	return o.Business
}

func (o *Profile) GetIndividual() *ProfileIndividual {
	if o == nil {
		return nil
	}
	return o.Individual
}
