// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/moov-go/pkg/utils"
)

type ProfileBusinessAddress struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	AddressLine1         *string                `json:"addressLine1,omitempty"`
	AddressLine2         *string                `json:"addressLine2,omitempty"`
	City                 *string                `json:"city,omitempty"`
	Country              *string                `json:"country,omitempty"`
	PostalCode           *string                `json:"postalCode,omitempty"`
	StateOrProvince      *string                `json:"stateOrProvince,omitempty"`
}

func (p ProfileBusinessAddress) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProfileBusinessAddress) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ProfileBusinessAddress) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ProfileBusinessAddress) GetAddressLine1() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine1
}

func (o *ProfileBusinessAddress) GetAddressLine2() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine2
}

func (o *ProfileBusinessAddress) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *ProfileBusinessAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *ProfileBusinessAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *ProfileBusinessAddress) GetStateOrProvince() *string {
	if o == nil {
		return nil
	}
	return o.StateOrProvince
}

// ProfileBusinessIndustryCodes - Describes industry specific identifiers
type ProfileBusinessIndustryCodes struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Mcc                  *string                `json:"mcc,omitempty"`
	Naics                *string                `json:"naics,omitempty"`
	Sic                  *string                `json:"sic,omitempty"`
}

func (p ProfileBusinessIndustryCodes) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProfileBusinessIndustryCodes) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ProfileBusinessIndustryCodes) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ProfileBusinessIndustryCodes) GetMcc() *string {
	if o == nil {
		return nil
	}
	return o.Mcc
}

func (o *ProfileBusinessIndustryCodes) GetNaics() *string {
	if o == nil {
		return nil
	}
	return o.Naics
}

func (o *ProfileBusinessIndustryCodes) GetSic() *string {
	if o == nil {
		return nil
	}
	return o.Sic
}

type ProfileBusinessPhone struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	CountryCode          *string                `json:"countryCode,omitempty"`
	Number               *string                `json:"number,omitempty"`
}

func (p ProfileBusinessPhone) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProfileBusinessPhone) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ProfileBusinessPhone) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ProfileBusinessPhone) GetCountryCode() *string {
	if o == nil {
		return nil
	}
	return o.CountryCode
}

func (o *ProfileBusinessPhone) GetNumber() *string {
	if o == nil {
		return nil
	}
	return o.Number
}

// ProfileBusiness - Describes a business
type ProfileBusiness struct {
	AdditionalProperties map[string]interface{}  `additionalProperties:"true" json:"-"`
	Address              *ProfileBusinessAddress `json:"address,omitempty"`
	// The type of entity represented by this Business
	BusinessType    BusinessType `json:"businessType"`
	Description     *string      `json:"description,omitempty"`
	DoingBusinessAs *string      `json:"doingBusinessAs,omitempty"`
	// Email Address
	Email             *string                       `json:"email,omitempty"`
	IndustryCodes     *ProfileBusinessIndustryCodes `json:"industryCodes,omitempty"`
	LegalBusinessName string                        `json:"legalBusinessName"`
	OwnersProvided    bool                          `json:"ownersProvided"`
	Phone             *ProfileBusinessPhone         `json:"phone,omitempty"`
	Representatives   []Representative              `json:"representatives,omitempty"`
	// Indicates whether a tax ID has been provided for this Business
	TaxIDProvided *bool   `default:"false" json:"taxIDProvided"`
	Website       *string `json:"website,omitempty"`
}

func (p ProfileBusiness) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProfileBusiness) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ProfileBusiness) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ProfileBusiness) GetAddress() *ProfileBusinessAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *ProfileBusiness) GetBusinessType() BusinessType {
	if o == nil {
		return BusinessType("")
	}
	return o.BusinessType
}

func (o *ProfileBusiness) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ProfileBusiness) GetDoingBusinessAs() *string {
	if o == nil {
		return nil
	}
	return o.DoingBusinessAs
}

func (o *ProfileBusiness) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *ProfileBusiness) GetIndustryCodes() *ProfileBusinessIndustryCodes {
	if o == nil {
		return nil
	}
	return o.IndustryCodes
}

func (o *ProfileBusiness) GetLegalBusinessName() string {
	if o == nil {
		return ""
	}
	return o.LegalBusinessName
}

func (o *ProfileBusiness) GetOwnersProvided() bool {
	if o == nil {
		return false
	}
	return o.OwnersProvided
}

func (o *ProfileBusiness) GetPhone() *ProfileBusinessPhone {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *ProfileBusiness) GetRepresentatives() []Representative {
	if o == nil {
		return nil
	}
	return o.Representatives
}

func (o *ProfileBusiness) GetTaxIDProvided() *bool {
	if o == nil {
		return nil
	}
	return o.TaxIDProvided
}

func (o *ProfileBusiness) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

type ProfileIndividualAddress struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	AddressLine1         *string                `json:"addressLine1,omitempty"`
	AddressLine2         *string                `json:"addressLine2,omitempty"`
	City                 *string                `json:"city,omitempty"`
	Country              *string                `json:"country,omitempty"`
	PostalCode           *string                `json:"postalCode,omitempty"`
	StateOrProvince      *string                `json:"stateOrProvince,omitempty"`
}

func (p ProfileIndividualAddress) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProfileIndividualAddress) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ProfileIndividualAddress) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ProfileIndividualAddress) GetAddressLine1() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine1
}

func (o *ProfileIndividualAddress) GetAddressLine2() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine2
}

func (o *ProfileIndividualAddress) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *ProfileIndividualAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *ProfileIndividualAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *ProfileIndividualAddress) GetStateOrProvince() *string {
	if o == nil {
		return nil
	}
	return o.StateOrProvince
}

type ProfileIndividualPhone struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	CountryCode          *string                `json:"countryCode,omitempty"`
	Number               *string                `json:"number,omitempty"`
}

func (p ProfileIndividualPhone) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProfileIndividualPhone) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ProfileIndividualPhone) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ProfileIndividualPhone) GetCountryCode() *string {
	if o == nil {
		return nil
	}
	return o.CountryCode
}

func (o *ProfileIndividualPhone) GetNumber() *string {
	if o == nil {
		return nil
	}
	return o.Number
}

// ProfileIndividual - Describes an individual
type ProfileIndividual struct {
	AdditionalProperties map[string]interface{}    `additionalProperties:"true" json:"-"`
	Address              *ProfileIndividualAddress `json:"address,omitempty"`
	// Indicates whether this Individual's birth date has been provided
	BirthDateProvided *bool `default:"false" json:"birthDateProvided"`
	// Email Address
	Email *string `json:"email,omitempty"`
	// Indicates whether a government ID (SSN, ITIN, etc.) has been provided for this Individual
	GovernmentIDProvided *bool `default:"false" json:"governmentIDProvided"`
	// Name for an individual
	Name  Name                    `json:"name"`
	Phone *ProfileIndividualPhone `json:"phone,omitempty"`
}

func (p ProfileIndividual) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProfileIndividual) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ProfileIndividual) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ProfileIndividual) GetAddress() *ProfileIndividualAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *ProfileIndividual) GetBirthDateProvided() *bool {
	if o == nil {
		return nil
	}
	return o.BirthDateProvided
}

func (o *ProfileIndividual) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *ProfileIndividual) GetGovernmentIDProvided() *bool {
	if o == nil {
		return nil
	}
	return o.GovernmentIDProvided
}

func (o *ProfileIndividual) GetName() Name {
	if o == nil {
		return Name{}
	}
	return o.Name
}

func (o *ProfileIndividual) GetPhone() *ProfileIndividualPhone {
	if o == nil {
		return nil
	}
	return o.Phone
}

// Profile - Describes a Moov Account Profile
type Profile struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Business             *ProfileBusiness       `json:"business,omitempty"`
	Individual           *ProfileIndividual     `json:"individual,omitempty"`
}

func (p Profile) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *Profile) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Profile) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *Profile) GetBusiness() *ProfileBusiness {
	if o == nil {
		return nil
	}
	return o.Business
}

func (o *Profile) GetIndividual() *ProfileIndividual {
	if o == nil {
		return nil
	}
	return o.Individual
}
