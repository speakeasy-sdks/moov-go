// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type CreateProfileAddress struct {
	AddressLine1    *string `json:"addressLine1,omitempty"`
	AddressLine2    *string `json:"addressLine2,omitempty"`
	City            *string `json:"city,omitempty"`
	Country         *string `json:"country,omitempty"`
	PostalCode      *string `json:"postalCode,omitempty"`
	StateOrProvince *string `json:"stateOrProvince,omitempty"`
}

func (o *CreateProfileAddress) GetAddressLine1() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine1
}

func (o *CreateProfileAddress) GetAddressLine2() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine2
}

func (o *CreateProfileAddress) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *CreateProfileAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *CreateProfileAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *CreateProfileAddress) GetStateOrProvince() *string {
	if o == nil {
		return nil
	}
	return o.StateOrProvince
}

// IndustryCodes - Describes industry specific identifiers
type IndustryCodes struct {
	Mcc   *string `json:"mcc,omitempty"`
	Naics *string `json:"naics,omitempty"`
	Sic   *string `json:"sic,omitempty"`
}

func (o *IndustryCodes) GetMcc() *string {
	if o == nil {
		return nil
	}
	return o.Mcc
}

func (o *IndustryCodes) GetNaics() *string {
	if o == nil {
		return nil
	}
	return o.Naics
}

func (o *IndustryCodes) GetSic() *string {
	if o == nil {
		return nil
	}
	return o.Sic
}

type CreateProfilePhone struct {
	CountryCode *string `json:"countryCode,omitempty"`
	Number      *string `json:"number,omitempty"`
}

func (o *CreateProfilePhone) GetCountryCode() *string {
	if o == nil {
		return nil
	}
	return o.CountryCode
}

func (o *CreateProfilePhone) GetNumber() *string {
	if o == nil {
		return nil
	}
	return o.Number
}

// TaxID - An EIN (employer identification number) for the business. For sole proprietors, an SSN can be used as the EIN.
type TaxID struct {
	Ein *Ein `json:"ein,omitempty"`
}

func (o *TaxID) GetEin() *Ein {
	if o == nil {
		return nil
	}
	return o.Ein
}

// Business - Describes the fields available when creating a business
type Business struct {
	Address *CreateProfileAddress `json:"address,omitempty"`
	// The type of entity represented by this Business
	BusinessType    BusinessType `json:"businessType"`
	Description     *string      `json:"description,omitempty"`
	DoingBusinessAs *string      `json:"doingBusinessAs,omitempty"`
	// Email Address
	Email             *string             `json:"email,omitempty"`
	IndustryCodes     *IndustryCodes      `json:"industryCodes,omitempty"`
	LegalBusinessName string              `json:"legalBusinessName"`
	Phone             *CreateProfilePhone `json:"phone,omitempty"`
	TaxID             *TaxID              `json:"taxID,omitempty"`
	Website           *string             `json:"website,omitempty"`
}

func (o *Business) GetAddress() *CreateProfileAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *Business) GetBusinessType() BusinessType {
	if o == nil {
		return BusinessType("")
	}
	return o.BusinessType
}

func (o *Business) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Business) GetDoingBusinessAs() *string {
	if o == nil {
		return nil
	}
	return o.DoingBusinessAs
}

func (o *Business) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *Business) GetIndustryCodes() *IndustryCodes {
	if o == nil {
		return nil
	}
	return o.IndustryCodes
}

func (o *Business) GetLegalBusinessName() string {
	if o == nil {
		return ""
	}
	return o.LegalBusinessName
}

func (o *Business) GetPhone() *CreateProfilePhone {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *Business) GetTaxID() *TaxID {
	if o == nil {
		return nil
	}
	return o.TaxID
}

func (o *Business) GetWebsite() *string {
	if o == nil {
		return nil
	}
	return o.Website
}

type CreateProfileSchemasAddress struct {
	AddressLine1    *string `json:"addressLine1,omitempty"`
	AddressLine2    *string `json:"addressLine2,omitempty"`
	City            *string `json:"city,omitempty"`
	Country         *string `json:"country,omitempty"`
	PostalCode      *string `json:"postalCode,omitempty"`
	StateOrProvince *string `json:"stateOrProvince,omitempty"`
}

func (o *CreateProfileSchemasAddress) GetAddressLine1() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine1
}

func (o *CreateProfileSchemasAddress) GetAddressLine2() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine2
}

func (o *CreateProfileSchemasAddress) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *CreateProfileSchemasAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *CreateProfileSchemasAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *CreateProfileSchemasAddress) GetStateOrProvince() *string {
	if o == nil {
		return nil
	}
	return o.StateOrProvince
}

// CreateProfileBirthDate - Birthdate for an individual
type CreateProfileBirthDate struct {
	Day   int64 `json:"day"`
	Month int64 `json:"month"`
	Year  int64 `json:"year"`
}

func (o *CreateProfileBirthDate) GetDay() int64 {
	if o == nil {
		return 0
	}
	return o.Day
}

func (o *CreateProfileBirthDate) GetMonth() int64 {
	if o == nil {
		return 0
	}
	return o.Month
}

func (o *CreateProfileBirthDate) GetYear() int64 {
	if o == nil {
		return 0
	}
	return o.Year
}

type CreateProfileItin struct {
	Full     *string `json:"full,omitempty"`
	LastFour *string `json:"lastFour,omitempty"`
}

func (o *CreateProfileItin) GetFull() *string {
	if o == nil {
		return nil
	}
	return o.Full
}

func (o *CreateProfileItin) GetLastFour() *string {
	if o == nil {
		return nil
	}
	return o.LastFour
}

type CreateProfileSsn struct {
	Full     *string `json:"full,omitempty"`
	LastFour *string `json:"lastFour,omitempty"`
}

func (o *CreateProfileSsn) GetFull() *string {
	if o == nil {
		return nil
	}
	return o.Full
}

func (o *CreateProfileSsn) GetLastFour() *string {
	if o == nil {
		return nil
	}
	return o.LastFour
}

type CreateProfileGovernmentID struct {
	Itin *CreateProfileItin `json:"itin,omitempty"`
	Ssn  *CreateProfileSsn  `json:"ssn,omitempty"`
}

func (o *CreateProfileGovernmentID) GetItin() *CreateProfileItin {
	if o == nil {
		return nil
	}
	return o.Itin
}

func (o *CreateProfileGovernmentID) GetSsn() *CreateProfileSsn {
	if o == nil {
		return nil
	}
	return o.Ssn
}

type CreateProfileSchemasPhone struct {
	CountryCode *string `json:"countryCode,omitempty"`
	Number      *string `json:"number,omitempty"`
}

func (o *CreateProfileSchemasPhone) GetCountryCode() *string {
	if o == nil {
		return nil
	}
	return o.CountryCode
}

func (o *CreateProfileSchemasPhone) GetNumber() *string {
	if o == nil {
		return nil
	}
	return o.Number
}

// Individual - Describes the fields available when creating an individual
type Individual struct {
	Address   *CreateProfileSchemasAddress `json:"address,omitempty"`
	BirthDate *CreateProfileBirthDate      `json:"birthDate,omitempty"`
	// Email Address
	Email        *string                    `json:"email,omitempty"`
	GovernmentID *CreateProfileGovernmentID `json:"governmentID,omitempty"`
	// Name for an individual
	Name  Name                       `json:"name"`
	Phone *CreateProfileSchemasPhone `json:"phone,omitempty"`
}

func (o *Individual) GetAddress() *CreateProfileSchemasAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *Individual) GetBirthDate() *CreateProfileBirthDate {
	if o == nil {
		return nil
	}
	return o.BirthDate
}

func (o *Individual) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *Individual) GetGovernmentID() *CreateProfileGovernmentID {
	if o == nil {
		return nil
	}
	return o.GovernmentID
}

func (o *Individual) GetName() Name {
	if o == nil {
		return Name{}
	}
	return o.Name
}

func (o *Individual) GetPhone() *CreateProfileSchemasPhone {
	if o == nil {
		return nil
	}
	return o.Phone
}

// CreateProfile - Describes the fields available when creating a profile.
// If `accountType` is set to `individual`, the `individual` object should be completed. All others should populate `business`.
type CreateProfile struct {
	Business   *Business   `json:"business,omitempty"`
	Individual *Individual `json:"individual,omitempty"`
}

func (o *CreateProfile) GetBusiness() *Business {
	if o == nil {
		return nil
	}
	return o.Business
}

func (o *CreateProfile) GetIndividual() *Individual {
	if o == nil {
		return nil
	}
	return o.Individual
}
