// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/moov-go/pkg/utils"
)

// Amount - A representation of money containing an integer value and it's currency.
type Amount struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// A 3-letter ISO 4217 currency code
	Currency string `json:"currency"`
	// Quantity in the smallest unit of the specified currency. In USD this is cents, so $12.04 is 1204 and $0.99 would be 99.
	Value int64 `json:"value"`
}

func (a Amount) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Amount) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Amount) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *Amount) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *Amount) GetValue() int64 {
	if o == nil {
		return 0
	}
	return o.Value
}
