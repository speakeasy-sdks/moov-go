// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type IssuedCardTransaction struct {
	// A representation of money containing an integer value and it's currency.
	Amount    *Amount    `json:"amount,omitempty"`
	CreatedOn *time.Time `json:"createdOn,omitempty"`
	// UUID v4
	FundingWalletID *string `json:"fundingWalletID,omitempty"`
	// UUID v4
	IssuingCardID *string                        `json:"issuingCardID,omitempty"`
	MerchantData  *IssuedCardTransactionMerchant `json:"merchantData,omitempty"`
	// Status of Transaction
	Status              *IssuedCardTransactionStatus `json:"status,omitempty"`
	TransactionDateTime *time.Time                   `json:"transactionDateTime,omitempty"`
	// UUID v4
	TransactionID *string `json:"transactionID,omitempty"`
	// Type of Transaction
	Type *IssuedCardTransactionType `json:"type,omitempty"`
}

func (o *IssuedCardTransaction) GetAmount() *Amount {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *IssuedCardTransaction) GetCreatedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedOn
}

func (o *IssuedCardTransaction) GetFundingWalletID() *string {
	if o == nil {
		return nil
	}
	return o.FundingWalletID
}

func (o *IssuedCardTransaction) GetIssuingCardID() *string {
	if o == nil {
		return nil
	}
	return o.IssuingCardID
}

func (o *IssuedCardTransaction) GetMerchantData() *IssuedCardTransactionMerchant {
	if o == nil {
		return nil
	}
	return o.MerchantData
}

func (o *IssuedCardTransaction) GetStatus() *IssuedCardTransactionStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *IssuedCardTransaction) GetTransactionDateTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.TransactionDateTime
}

func (o *IssuedCardTransaction) GetTransactionID() *string {
	if o == nil {
		return nil
	}
	return o.TransactionID
}

func (o *IssuedCardTransaction) GetType() *IssuedCardTransactionType {
	if o == nil {
		return nil
	}
	return o.Type
}
