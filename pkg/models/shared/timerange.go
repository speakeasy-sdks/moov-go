// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/moov-go/pkg/utils"
	"time"
)

// TimeRange - Specify a time range between two timestamps and then the interval duration for each result in the specific `tz` timezone
type TimeRange struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Every                *time.Time             `json:"every,omitempty"`
	From                 *time.Time             `json:"from,omitempty"`
	To                   *time.Time             `json:"to,omitempty"`
	Tz                   *time.Time             `json:"tz,omitempty"`
}

func (t TimeRange) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TimeRange) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TimeRange) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *TimeRange) GetEvery() *time.Time {
	if o == nil {
		return nil
	}
	return o.Every
}

func (o *TimeRange) GetFrom() *time.Time {
	if o == nil {
		return nil
	}
	return o.From
}

func (o *TimeRange) GetTo() *time.Time {
	if o == nil {
		return nil
	}
	return o.To
}

func (o *TimeRange) GetTz() *time.Time {
	if o == nil {
		return nil
	}
	return o.Tz
}
