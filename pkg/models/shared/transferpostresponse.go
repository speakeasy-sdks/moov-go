// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type TransferPostResponseType string

const (
	TransferPostResponseTypeCreatedTransfer TransferPostResponseType = "CreatedTransfer"
	TransferPostResponseTypeGetTransferFull TransferPostResponseType = "GetTransferFull"
)

type TransferPostResponse struct {
	CreatedTransfer *CreatedTransfer
	GetTransferFull *GetTransferFull

	Type TransferPostResponseType
}

func CreateTransferPostResponseCreatedTransfer(createdTransfer CreatedTransfer) TransferPostResponse {
	typ := TransferPostResponseTypeCreatedTransfer

	return TransferPostResponse{
		CreatedTransfer: &createdTransfer,
		Type:            typ,
	}
}

func CreateTransferPostResponseGetTransferFull(getTransferFull GetTransferFull) TransferPostResponse {
	typ := TransferPostResponseTypeGetTransferFull

	return TransferPostResponse{
		GetTransferFull: &getTransferFull,
		Type:            typ,
	}
}

func (u *TransferPostResponse) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	createdTransfer := new(CreatedTransfer)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createdTransfer); err == nil {
		u.CreatedTransfer = createdTransfer
		u.Type = TransferPostResponseTypeCreatedTransfer
		return nil
	}

	getTransferFull := new(GetTransferFull)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&getTransferFull); err == nil {
		u.GetTransferFull = getTransferFull
		u.Type = TransferPostResponseTypeGetTransferFull
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u TransferPostResponse) MarshalJSON() ([]byte, error) {
	if u.CreatedTransfer != nil {
		return json.Marshal(u.CreatedTransfer)
	}

	if u.GetTransferFull != nil {
		return json.Marshal(u.GetTransferFull)
	}

	return nil, errors.New("could not marshal union type: all fields are null")

}
