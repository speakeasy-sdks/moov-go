// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/moov-go/pkg/utils"
)

// PatchRepresentativeRequestAddress - Residential address for an individual. Business addresses not accepted.
type PatchRepresentativeRequestAddress struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	AddressLine1         *string                `json:"addressLine1,omitempty"`
	AddressLine2         *string                `json:"addressLine2,omitempty"`
	City                 *string                `json:"city,omitempty"`
	Country              *string                `json:"country,omitempty"`
	PostalCode           *string                `json:"postalCode,omitempty"`
	StateOrProvince      *string                `json:"stateOrProvince,omitempty"`
}

func (p PatchRepresentativeRequestAddress) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchRepresentativeRequestAddress) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PatchRepresentativeRequestAddress) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *PatchRepresentativeRequestAddress) GetAddressLine1() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine1
}

func (o *PatchRepresentativeRequestAddress) GetAddressLine2() *string {
	if o == nil {
		return nil
	}
	return o.AddressLine2
}

func (o *PatchRepresentativeRequestAddress) GetCity() *string {
	if o == nil {
		return nil
	}
	return o.City
}

func (o *PatchRepresentativeRequestAddress) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *PatchRepresentativeRequestAddress) GetPostalCode() *string {
	if o == nil {
		return nil
	}
	return o.PostalCode
}

func (o *PatchRepresentativeRequestAddress) GetStateOrProvince() *string {
	if o == nil {
		return nil
	}
	return o.StateOrProvince
}

// PatchRepresentativeRequestBirthDate - Birthdate for an individual
type PatchRepresentativeRequestBirthDate struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Day                  int64                  `json:"day"`
	Month                int64                  `json:"month"`
	Year                 int64                  `json:"year"`
}

func (p PatchRepresentativeRequestBirthDate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchRepresentativeRequestBirthDate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PatchRepresentativeRequestBirthDate) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *PatchRepresentativeRequestBirthDate) GetDay() int64 {
	if o == nil {
		return 0
	}
	return o.Day
}

func (o *PatchRepresentativeRequestBirthDate) GetMonth() int64 {
	if o == nil {
		return 0
	}
	return o.Month
}

func (o *PatchRepresentativeRequestBirthDate) GetYear() int64 {
	if o == nil {
		return 0
	}
	return o.Year
}

type PatchRepresentativeRequestGovernmentIDItin struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Full                 *string                `json:"full,omitempty"`
	LastFour             *string                `json:"lastFour,omitempty"`
}

func (p PatchRepresentativeRequestGovernmentIDItin) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchRepresentativeRequestGovernmentIDItin) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PatchRepresentativeRequestGovernmentIDItin) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *PatchRepresentativeRequestGovernmentIDItin) GetFull() *string {
	if o == nil {
		return nil
	}
	return o.Full
}

func (o *PatchRepresentativeRequestGovernmentIDItin) GetLastFour() *string {
	if o == nil {
		return nil
	}
	return o.LastFour
}

type PatchRepresentativeRequestGovernmentIDSsn struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Full                 *string                `json:"full,omitempty"`
	LastFour             *string                `json:"lastFour,omitempty"`
}

func (p PatchRepresentativeRequestGovernmentIDSsn) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchRepresentativeRequestGovernmentIDSsn) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PatchRepresentativeRequestGovernmentIDSsn) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *PatchRepresentativeRequestGovernmentIDSsn) GetFull() *string {
	if o == nil {
		return nil
	}
	return o.Full
}

func (o *PatchRepresentativeRequestGovernmentIDSsn) GetLastFour() *string {
	if o == nil {
		return nil
	}
	return o.LastFour
}

type PatchRepresentativeRequestGovernmentID struct {
	AdditionalProperties map[string]interface{}                      `additionalProperties:"true" json:"-"`
	Itin                 *PatchRepresentativeRequestGovernmentIDItin `json:"itin,omitempty"`
	Ssn                  *PatchRepresentativeRequestGovernmentIDSsn  `json:"ssn,omitempty"`
}

func (p PatchRepresentativeRequestGovernmentID) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchRepresentativeRequestGovernmentID) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PatchRepresentativeRequestGovernmentID) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *PatchRepresentativeRequestGovernmentID) GetItin() *PatchRepresentativeRequestGovernmentIDItin {
	if o == nil {
		return nil
	}
	return o.Itin
}

func (o *PatchRepresentativeRequestGovernmentID) GetSsn() *PatchRepresentativeRequestGovernmentIDSsn {
	if o == nil {
		return nil
	}
	return o.Ssn
}

// PatchRepresentativeRequestName - Name for an individual
type PatchRepresentativeRequestName struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	FirstName            *string                `json:"firstName,omitempty"`
	LastName             *string                `json:"lastName,omitempty"`
	MiddleName           *string                `json:"middleName,omitempty"`
	Suffix               *string                `json:"suffix,omitempty"`
}

func (p PatchRepresentativeRequestName) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchRepresentativeRequestName) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PatchRepresentativeRequestName) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *PatchRepresentativeRequestName) GetFirstName() *string {
	if o == nil {
		return nil
	}
	return o.FirstName
}

func (o *PatchRepresentativeRequestName) GetLastName() *string {
	if o == nil {
		return nil
	}
	return o.LastName
}

func (o *PatchRepresentativeRequestName) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *PatchRepresentativeRequestName) GetSuffix() *string {
	if o == nil {
		return nil
	}
	return o.Suffix
}

type PatchRepresentativeRequestPhone struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	CountryCode          *string                `json:"countryCode,omitempty"`
	Number               *string                `json:"number,omitempty"`
}

func (p PatchRepresentativeRequestPhone) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchRepresentativeRequestPhone) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PatchRepresentativeRequestPhone) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *PatchRepresentativeRequestPhone) GetCountryCode() *string {
	if o == nil {
		return nil
	}
	return o.CountryCode
}

func (o *PatchRepresentativeRequestPhone) GetNumber() *string {
	if o == nil {
		return nil
	}
	return o.Number
}

// PatchRepresentativeRequestResponsibilities - Describes the job responsibilities of an individual
type PatchRepresentativeRequestResponsibilities struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Indicates whether this individual has significant management responsibilities within the business
	IsController *bool `default:"false" json:"isController"`
	// If `true`, this field indicates that this individual has an ownership stake of at least 25% in the business. If the representative does not own at least 25% of the business, this field should be `false`.
	IsOwner  *bool   `default:"false" json:"isOwner"`
	JobTitle *string `json:"jobTitle,omitempty"`
	// The percentage of ownership this individual has in the business (required if `isOwner` is `true`)
	OwnershipPercentage *int64 `json:"ownershipPercentage,omitempty"`
}

func (p PatchRepresentativeRequestResponsibilities) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchRepresentativeRequestResponsibilities) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PatchRepresentativeRequestResponsibilities) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *PatchRepresentativeRequestResponsibilities) GetIsController() *bool {
	if o == nil {
		return nil
	}
	return o.IsController
}

func (o *PatchRepresentativeRequestResponsibilities) GetIsOwner() *bool {
	if o == nil {
		return nil
	}
	return o.IsOwner
}

func (o *PatchRepresentativeRequestResponsibilities) GetJobTitle() *string {
	if o == nil {
		return nil
	}
	return o.JobTitle
}

func (o *PatchRepresentativeRequestResponsibilities) GetOwnershipPercentage() *int64 {
	if o == nil {
		return nil
	}
	return o.OwnershipPercentage
}

// PatchRepresentativeRequest - Describes the fields available when patching a representative
type PatchRepresentativeRequest struct {
	AdditionalProperties map[string]interface{}                      `additionalProperties:"true" json:"-"`
	Address              *PatchRepresentativeRequestAddress          `json:"address,omitempty"`
	BirthDate            *PatchRepresentativeRequestBirthDate        `json:"birthDate,omitempty"`
	Email                *string                                     `json:"email,omitempty"`
	GovernmentID         *PatchRepresentativeRequestGovernmentID     `json:"governmentID,omitempty"`
	Name                 *PatchRepresentativeRequestName             `json:"name,omitempty"`
	Phone                *PatchRepresentativeRequestPhone            `json:"phone,omitempty"`
	Responsibilities     *PatchRepresentativeRequestResponsibilities `json:"responsibilities,omitempty"`
}

func (p PatchRepresentativeRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchRepresentativeRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PatchRepresentativeRequest) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *PatchRepresentativeRequest) GetAddress() *PatchRepresentativeRequestAddress {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *PatchRepresentativeRequest) GetBirthDate() *PatchRepresentativeRequestBirthDate {
	if o == nil {
		return nil
	}
	return o.BirthDate
}

func (o *PatchRepresentativeRequest) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *PatchRepresentativeRequest) GetGovernmentID() *PatchRepresentativeRequestGovernmentID {
	if o == nil {
		return nil
	}
	return o.GovernmentID
}

func (o *PatchRepresentativeRequest) GetName() *PatchRepresentativeRequestName {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PatchRepresentativeRequest) GetPhone() *PatchRepresentativeRequestPhone {
	if o == nil {
		return nil
	}
	return o.Phone
}

func (o *PatchRepresentativeRequest) GetResponsibilities() *PatchRepresentativeRequestResponsibilities {
	if o == nil {
		return nil
	}
	return o.Responsibilities
}
