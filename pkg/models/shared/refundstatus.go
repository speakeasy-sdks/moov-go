// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RefundStatus string

const (
	RefundStatusCreated   RefundStatus = "created"
	RefundStatusPending   RefundStatus = "pending"
	RefundStatusCompleted RefundStatus = "completed"
	RefundStatusFailed    RefundStatus = "failed"
)

func (e RefundStatus) ToPointer() *RefundStatus {
	return &e
}

func (e *RefundStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created":
		fallthrough
	case "pending":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = RefundStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RefundStatus: %v", v)
	}
}
