// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/moov-go/pkg/utils"
	"time"
)

type CreatedRefund struct {
	// A representation of money containing an integer value and it's currency.
	Amount    *Amount    `json:"amount,omitempty"`
	CreatedOn *time.Time `json:"createdOn,omitempty"`
	// UUID v4
	RefundID *string `json:"refundID,omitempty"`
}

func (c CreatedRefund) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreatedRefund) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *CreatedRefund) GetAmount() *Amount {
	if o == nil {
		return nil
	}
	return o.Amount
}

func (o *CreatedRefund) GetCreatedOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedOn
}

func (o *CreatedRefund) GetRefundID() *string {
	if o == nil {
		return nil
	}
	return o.RefundID
}
