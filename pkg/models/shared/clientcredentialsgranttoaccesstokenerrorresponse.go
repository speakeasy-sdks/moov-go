// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Error string

const (
	ErrorInvalidRequest       Error = "invalid_request"
	ErrorInvalidClient        Error = "invalid_client"
	ErrorInvalidGrant         Error = "invalid_grant"
	ErrorUnauthorizedClient   Error = "unauthorized_client"
	ErrorUnsupportedGrantType Error = "unsupported_grant_type"
	ErrorInvalidScope         Error = "invalid_scope"
)

func (e Error) ToPointer() *Error {
	return &e
}

func (e *Error) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_request":
		fallthrough
	case "invalid_client":
		fallthrough
	case "invalid_grant":
		fallthrough
	case "unauthorized_client":
		fallthrough
	case "unsupported_grant_type":
		fallthrough
	case "invalid_scope":
		*e = Error(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Error: %v", v)
	}
}

// ClientCredentialsGrantToAccessTokenErrorResponse - Error happened when trying to obtain an access token
type ClientCredentialsGrantToAccessTokenErrorResponse struct {
	Error *Error `json:"error,omitempty"`
}

func (o *ClientCredentialsGrantToAccessTokenErrorResponse) GetError() *Error {
	if o == nil {
		return nil
	}
	return o.Error
}
