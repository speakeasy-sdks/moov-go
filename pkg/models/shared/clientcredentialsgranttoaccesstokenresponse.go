// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/moov-go/pkg/utils"
)

// ClientCredentialsGrantToAccessTokenResponseTokenType - Type of token returned. Opaque is not parse-able while JWT follows JWT spec.
type ClientCredentialsGrantToAccessTokenResponseTokenType string

const (
	ClientCredentialsGrantToAccessTokenResponseTokenTypeOpaque ClientCredentialsGrantToAccessTokenResponseTokenType = "opaque"
	ClientCredentialsGrantToAccessTokenResponseTokenTypeJwt    ClientCredentialsGrantToAccessTokenResponseTokenType = "jwt"
)

func (e ClientCredentialsGrantToAccessTokenResponseTokenType) ToPointer() *ClientCredentialsGrantToAccessTokenResponseTokenType {
	return &e
}

func (e *ClientCredentialsGrantToAccessTokenResponseTokenType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "opaque":
		fallthrough
	case "jwt":
		*e = ClientCredentialsGrantToAccessTokenResponseTokenType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ClientCredentialsGrantToAccessTokenResponseTokenType: %v", v)
	}
}

// ClientCredentialsGrantToAccessTokenResponse - Device model
type ClientCredentialsGrantToAccessTokenResponse struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// String passed to the authorization server to gain access to the system
	AccessToken *string `json:"access_token,omitempty"`
	// Number of seconds the token is valid for.
	ExpiresIn *int `json:"expires_in,omitempty"`
	// String passed to the authorization server to gain access to the system
	RefreshToken *string `json:"refresh_token,omitempty"`
	// A space-delimited list of [scopes](https://docs.moov.io/guides/developer-tools/api-keys/scopes/) that are allowed
	Scope *string `json:"scope,omitempty"`
	// Type of token returned. Opaque is not parse-able while JWT follows JWT spec.
	TokenType *ClientCredentialsGrantToAccessTokenResponseTokenType `json:"token_type,omitempty"`
}

func (c ClientCredentialsGrantToAccessTokenResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClientCredentialsGrantToAccessTokenResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ClientCredentialsGrantToAccessTokenResponse) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClientCredentialsGrantToAccessTokenResponse) GetAccessToken() *string {
	if o == nil {
		return nil
	}
	return o.AccessToken
}

func (o *ClientCredentialsGrantToAccessTokenResponse) GetExpiresIn() *int {
	if o == nil {
		return nil
	}
	return o.ExpiresIn
}

func (o *ClientCredentialsGrantToAccessTokenResponse) GetRefreshToken() *string {
	if o == nil {
		return nil
	}
	return o.RefreshToken
}

func (o *ClientCredentialsGrantToAccessTokenResponse) GetScope() *string {
	if o == nil {
		return nil
	}
	return o.Scope
}

func (o *ClientCredentialsGrantToAccessTokenResponse) GetTokenType() *ClientCredentialsGrantToAccessTokenResponseTokenType {
	if o == nil {
		return nil
	}
	return o.TokenType
}
