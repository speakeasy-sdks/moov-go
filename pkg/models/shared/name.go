// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/moov-go/pkg/utils"
)

// Name for an individual
type Name struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Name this person was given. This is usually the the same as first name.
	FirstName *string `json:"firstName,omitempty"`
	// Family name of this person. This is usually the the same as last name.
	LastName *string `json:"lastName,omitempty"`
	// Name this person was given. This is usually the the same as first name.
	MiddleName *string `json:"middleName,omitempty"`
	// Suffix of a given name
	Suffix *string `json:"suffix,omitempty"`
}

func (n Name) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(n, "", false)
}

func (n *Name) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &n, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Name) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *Name) GetFirstName() *string {
	if o == nil {
		return nil
	}
	return o.FirstName
}

func (o *Name) GetLastName() *string {
	if o == nil {
		return nil
	}
	return o.LastName
}

func (o *Name) GetMiddleName() *string {
	if o == nil {
		return nil
	}
	return o.MiddleName
}

func (o *Name) GetSuffix() *string {
	if o == nil {
		return nil
	}
	return o.Suffix
}
