// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// Capability - Describes an action or set of actions that an account is permitted to perform
type Capability struct {
	// ID of Account
	AccountID *string `json:"accountID,omitempty"`
	// ID of Capability
	Capability CapabilityID `json:"capability"`
	CreatedOn  time.Time    `json:"createdOn"`
	DisabledOn *time.Time   `json:"disabledOn,omitempty"`
	// If status is `disabled`, the reason this capability was disabled
	DisabledReason *string `json:"disabledReason,omitempty"`
	// Represents individual and business data necessary to facilitate the enabling of a capability for an account
	Requirements *Requirement `json:"requirements,omitempty"`
	// The status of the capability requested for an account
	Status    CapabilityStatus `json:"status"`
	UpdatedOn time.Time        `json:"updatedOn"`
}

func (o *Capability) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *Capability) GetCapability() CapabilityID {
	if o == nil {
		return CapabilityID("")
	}
	return o.Capability
}

func (o *Capability) GetCreatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedOn
}

func (o *Capability) GetDisabledOn() *time.Time {
	if o == nil {
		return nil
	}
	return o.DisabledOn
}

func (o *Capability) GetDisabledReason() *string {
	if o == nil {
		return nil
	}
	return o.DisabledReason
}

func (o *Capability) GetRequirements() *Requirement {
	if o == nil {
		return nil
	}
	return o.Requirements
}

func (o *Capability) GetStatus() CapabilityStatus {
	if o == nil {
		return CapabilityStatus("")
	}
	return o.Status
}

func (o *Capability) GetUpdatedOn() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedOn
}
