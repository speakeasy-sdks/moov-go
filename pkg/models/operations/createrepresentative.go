// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateRepresentativeRequest struct {
	CreateRepresentative shared.CreateRepresentative `request:"mediaType=application/json"`
	// ID of the account
	AccountID string `pathParam:"style=simple,explode=false,name=accountID"`
}

func (o *CreateRepresentativeRequest) GetCreateRepresentative() shared.CreateRepresentative {
	if o == nil {
		return shared.CreateRepresentative{}
	}
	return o.CreateRepresentative
}

func (o *CreateRepresentativeRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

type CreateRepresentativeResponse struct {
	ContentType string
	// representative created
	Representative *shared.Representative
	StatusCode     int
	RawResponse    *http.Response
}

func (o *CreateRepresentativeResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateRepresentativeResponse) GetRepresentative() *shared.Representative {
	if o == nil {
		return nil
	}
	return o.Representative
}

func (o *CreateRepresentativeResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateRepresentativeResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
