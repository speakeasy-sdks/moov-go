// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/moov-go/pkg/models/shared"
	"net/http"
)

type SearchInstitutionRequest struct {
	// Maximum results returned by a search
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Name of the financial institution
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Payment rail to search on
	Rail shared.Rail `pathParam:"style=simple,explode=false,name=rail"`
	// Routing number for a financial institution
	RoutingNumber *string `queryParam:"style=form,explode=true,name=routingNumber"`
	// Optional parameters to filter results
	State *string `queryParam:"style=form,explode=true,name=state"`
}

func (o *SearchInstitutionRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *SearchInstitutionRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *SearchInstitutionRequest) GetRail() shared.Rail {
	if o == nil {
		return shared.Rail("")
	}
	return o.Rail
}

func (o *SearchInstitutionRequest) GetRoutingNumber() *string {
	if o == nil {
		return nil
	}
	return o.RoutingNumber
}

func (o *SearchInstitutionRequest) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

type SearchInstitutionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Financial institutions returned from a search
	FinancialInstitutions *shared.FinancialInstitutions
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *SearchInstitutionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *SearchInstitutionResponse) GetFinancialInstitutions() *shared.FinancialInstitutions {
	if o == nil {
		return nil
	}
	return o.FinancialInstitutions
}

func (o *SearchInstitutionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *SearchInstitutionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
