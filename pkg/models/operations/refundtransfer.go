// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/moov-go/pkg/models/shared"
	"github.com/speakeasy-sdks/moov-go/pkg/types"
	"github.com/speakeasy-sdks/moov-go/pkg/utils"
	"net/http"
)

type RefundTransferRequest struct {
	// Prevents duplicate refunds from being created. Note that we only accept UUID v4.
	XIdempotencyKey string `header:"style=simple,explode=false,name=X-Idempotency-Key"`
	// ID of the Transfer
	TransferID   string               `pathParam:"style=simple,explode=false,name=transferID"`
	CreateRefund *shared.CreateRefund `request:"mediaType=application/json"`
	// Optional header that indicates whether to return a synchronous response that includes the full refund and card transaction details or an asynchronous response indicating the refund was created (this is the default response if the header is omitted).
	xWaitFor *string `const:"rail-response" header:"style=simple,explode=false,name=X-Wait-For"`
}

func (r RefundTransferRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RefundTransferRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RefundTransferRequest) GetXIdempotencyKey() string {
	if o == nil {
		return ""
	}
	return o.XIdempotencyKey
}

func (o *RefundTransferRequest) GetTransferID() string {
	if o == nil {
		return ""
	}
	return o.TransferID
}

func (o *RefundTransferRequest) GetCreateRefund() *shared.CreateRefund {
	if o == nil {
		return nil
	}
	return o.CreateRefund
}

func (o *RefundTransferRequest) GetXWaitFor() *string {
	return types.String("rail-response")
}

type RefundTransferResponse struct {
	ContentType string
	// A refund was successfully created but an error occurred while waiting for a synchronous response.
	GetRefund *shared.GetRefund
	// Successfully initiated a card refund
	RefundPostResponse *shared.RefundPostResponse
	StatusCode         int
	RawResponse        *http.Response
}

func (o *RefundTransferResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *RefundTransferResponse) GetGetRefund() *shared.GetRefund {
	if o == nil {
		return nil
	}
	return o.GetRefund
}

func (o *RefundTransferResponse) GetRefundPostResponse() *shared.RefundPostResponse {
	if o == nil {
		return nil
	}
	return o.RefundPostResponse
}

func (o *RefundTransferResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *RefundTransferResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
