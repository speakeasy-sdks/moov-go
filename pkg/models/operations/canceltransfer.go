// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CancelTransferRequest struct {
	CreateReversal *shared.CreateReversal `request:"mediaType=application/json"`
	// Prevents duplicate reversals from being created
	XIdempotencyKey string `header:"style=simple,explode=false,name=X-Idempotency-Key"`
	// ID of the Transfer
	TransferID string `pathParam:"style=simple,explode=false,name=transferID"`
}

func (o *CancelTransferRequest) GetCreateReversal() *shared.CreateReversal {
	if o == nil {
		return nil
	}
	return o.CreateReversal
}

func (o *CancelTransferRequest) GetXIdempotencyKey() string {
	if o == nil {
		return ""
	}
	return o.XIdempotencyKey
}

func (o *CancelTransferRequest) GetTransferID() string {
	if o == nil {
		return ""
	}
	return o.TransferID
}

type CancelTransferResponse struct {
	ContentType string
	// Successfully initiated a reversal
	CreatedReversal *shared.CreatedReversal
	// Reversal request failed, an error message will be available in the response body.
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}

func (o *CancelTransferResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CancelTransferResponse) GetCreatedReversal() *shared.CreatedReversal {
	if o == nil {
		return nil
	}
	return o.CreatedReversal
}

func (o *CancelTransferResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *CancelTransferResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CancelTransferResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
